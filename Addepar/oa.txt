听说是个startup最近开始用PIP了
在Hackerrank做了 只有一个题半个小时+15分钟buffer time
题是去年亚麻OA原题 fetch_items to display
Explanation
We sort the results by the sortColumn and order. Then using the pageSize and the pageIndex, we can figure out the number of results on the previous pages and the index of the first result of the target pageIndex page. For example, pageIndex = 1 and pageSize = 2, there are 1 * 2 = 2 results on page 0 so the index the first result of page 1 should be 2. Finally we return all the results on the target page.
from typing import Dict, List, Tuple
def fetch_results_to_display(sort_column: int, sort_order: int, results_per_page: int, page_index: int, results: Dict[str, Tuple[int, int]]) -> List[str]:
    ordered = [(name, rel, price) for name, (rel, price) in results.items()]
    ordered.sort(key=lambda x: x[sort_column], reverse=sort_order == 1) # sort by sort_column and reverse order if needed
    start_index = results_per_page * page_index # find the start index of the first result on the target page
    return [name for name, _, _ in ordered[start_index:start_index + results_per_page]] # return only the name of each result on the page
if __name__ == '__main__':
    sort_column = int(input())
    sort_order = int(input())
    results_per_page = int(input())
    page‍‍‌‍‌‍‍‌‍‌‍‍‌‌‌‍‍‌‍‌_index = int(input())
    results_length = int(input())
    results = {
        n: (int(r), int(p))
        for _ in range(results_length)
        for n, r, p in [input().split()]
    }
    res = fetch_results_to_display(sort_column, sort_order, results_per_page, page_index, results)
    print(' '.join(res))
